<?xml version="1.0"?>
<tool id="edu.tamu.cpt.blast.blast2pxmfa" name="Blast TSV to Protein XMFA" version="1.0">
  <description></description>
  <macros>
    <import>macros.xml</import>
    <import>cpt-macros.xml</import>
  </macros>
  <expand macro="requirements">
    <requirement type="package" version="2.1">clustalw</requirement>
  </expand>
  <command detect_errors="aggressive"><![CDATA[
'$__tool_directory__/blast2pxmfa.py'
@BLAST_TSV@
'$fasta'
'$gff3'
'$output'
]]></command>
  <inputs>
    <expand macro="blast_tsv" />
    <expand macro="gff3_with_fasta" />
  </inputs>
  <outputs>
    <data format="pxmfa" name="output"/>
  </outputs>
  <tests>
      <test>
          <param name="blast_tsv" value="results.tsv"/>
          <param name="fasta" value="related.fa"/>
          <param name="gff3" value="related.gbk.gff"/>
          <output name="output" file="cbk.xmfa">
                <assert_contents>
			    <has_n_lines n="7547" delta="100"/>
		</assert_contents>
          </output>
      </test>
  </tests>
  <help><![CDATA[
.. class:: warningmark

You likely should first filter your data first using the `Blast Tabular Dice
Filter tool <root?tool_id=edu.tamu.cpt.blast.blasttab_dice_filter>`__.

**What it does**

This tool processes BLAST Tabular results into a *protein* XMFA file. This
permits visualizing the data with CPT developed XMFA based tooling.

**How it works**

The tool works by:

- taking the set of blast results
- clustering them according to relationships detected by blast
- running ClustalW to generate a set of alignments for each cluster
- outputting those clusters in the XMFA format
]]></help>
    <citations>
    </citations>
</tool>
